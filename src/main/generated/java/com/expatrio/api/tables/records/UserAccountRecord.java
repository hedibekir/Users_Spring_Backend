/*
 * This file is generated by jOOQ.
 */
package com.expatrio.api.tables.records;


import com.expatrio.api.model.UserRole;
import com.expatrio.api.tables.UserAccount;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAccountRecord extends UpdatableRecordImpl<UserAccountRecord> implements Record6<Integer, String, String, String, String, UserRole> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_account.id</code>.
     */
    public UserAccountRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.user_account.email</code>.
     */
    public UserAccountRecord setEmail(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.user_account.firstname</code>.
     */
    public UserAccountRecord setFirstname(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.firstname</code>.
     */
    public String getFirstname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.user_account.lastname</code>.
     */
    public UserAccountRecord setLastname(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.lastname</code>.
     */
    public String getLastname() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.user_account.password</code>.
     */
    public UserAccountRecord setPassword(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.password</code>.
     */
    public String getPassword() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.user_account.role</code>.
     */
    public UserAccountRecord setRole(UserRole value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.role</code>.
     */
    public UserRole getRole() {
        return (UserRole) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, String, String, UserRole> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, String, String, String, UserRole> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return UserAccount.USER_ACCOUNT.ID;
    }

    @Override
    public Field<String> field2() {
        return UserAccount.USER_ACCOUNT.EMAIL;
    }

    @Override
    public Field<String> field3() {
        return UserAccount.USER_ACCOUNT.FIRSTNAME;
    }

    @Override
    public Field<String> field4() {
        return UserAccount.USER_ACCOUNT.LASTNAME;
    }

    @Override
    public Field<String> field5() {
        return UserAccount.USER_ACCOUNT.PASSWORD;
    }

    @Override
    public Field<UserRole> field6() {
        return UserAccount.USER_ACCOUNT.ROLE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEmail();
    }

    @Override
    public String component3() {
        return getFirstname();
    }

    @Override
    public String component4() {
        return getLastname();
    }

    @Override
    public String component5() {
        return getPassword();
    }

    @Override
    public UserRole component6() {
        return getRole();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEmail();
    }

    @Override
    public String value3() {
        return getFirstname();
    }

    @Override
    public String value4() {
        return getLastname();
    }

    @Override
    public String value5() {
        return getPassword();
    }

    @Override
    public UserRole value6() {
        return getRole();
    }

    @Override
    public UserAccountRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserAccountRecord value2(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserAccountRecord value3(String value) {
        setFirstname(value);
        return this;
    }

    @Override
    public UserAccountRecord value4(String value) {
        setLastname(value);
        return this;
    }

    @Override
    public UserAccountRecord value5(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserAccountRecord value6(UserRole value) {
        setRole(value);
        return this;
    }

    @Override
    public UserAccountRecord values(Integer value1, String value2, String value3, String value4, String value5, UserRole value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserAccountRecord
     */
    public UserAccountRecord() {
        super(UserAccount.USER_ACCOUNT);
    }

    /**
     * Create a detached, initialised UserAccountRecord
     */
    public UserAccountRecord(Integer id, String email, String firstname, String lastname, String password, UserRole role) {
        super(UserAccount.USER_ACCOUNT);

        setId(id);
        setEmail(email);
        setFirstname(firstname);
        setLastname(lastname);
        setPassword(password);
        setRole(role);
        resetChangedOnNotNull();
    }
}
